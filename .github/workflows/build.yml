name: Build and Release (Fixed)

on:
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Debug - Show package.json
        run: cat package.json | grep -C 5 "pnpm" || true
      
      - name: Remove packageManager field if exists
        run: |
          if grep -q "packageManager" package.json; then
            echo "Found packageManager field, removing..."
            sed -i.bak '/"packageManager":/d' package.json
            cat package.json | grep -C 5 "pnpm"
          else
            echo "No packageManager field found"
          fi
        shell: bash
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      
      - name: Install pnpm
        run: npm install -g pnpm@10
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Build application
        run: pnpm build
      
      - name: Package Electron app (Windows)
        if: matrix.os == 'windows-latest'
        run: pnpm electron:build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Package Electron app (macOS)
        if: matrix.os == 'macos-latest'
        run: pnpm electron:build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Package Electron app (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: pnpm electron:build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: release/*.exe
      
      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-installer
          path: release/*.dmg
      
      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-installer
          path: release/*.AppImage
